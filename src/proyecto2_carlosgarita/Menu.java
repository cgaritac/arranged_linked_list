/*
Universidad: UNED
Curso:        Estructura de Datos 
Código:       00825
Tema:         Proyecto 2
Estudiante:   Carlos Garita Campos
Periodo:      II Cuatrimestre 2020
 */
package proyecto2_carlosgarita;

import javax.swing.JOptionPane;
import static proyecto2_carlosgarita.VariablesGlobales.listaPeliculas;

/**
 *
 * @author cgari
 */
public class Menu extends javax.swing.JFrame {

    /**
     * Creates new form Menu
     */
    public Menu() {
        initComponents();
        setLocationRelativeTo(null); //Ubica el menú en el centro de la pantalla

        //Asignación de radioButtons a un buttonGroup
        this.btgOpciones.add(this.rdbExtraer);
        this.btgOpciones.add(this.rdbInsertar);
        this.btgOpciones.add(this.rdbInversion);
        this.btgOpciones.add(this.rdbMostrarLista);
        this.btgOpciones.add(this.rdbNumeroPeliculas);
        this.btgOpciones.add(this.rdbObtenerInformacion);
        this.btgOpciones.add(this.rdbVaciar);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btgOpciones = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        lblCartelera = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        btnAceptar = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();
        rdbInsertar = new javax.swing.JRadioButton();
        rdbExtraer = new javax.swing.JRadioButton();
        rdbObtenerInformacion = new javax.swing.JRadioButton();
        rdbNumeroPeliculas = new javax.swing.JRadioButton();
        rdbMostrarLista = new javax.swing.JRadioButton();
        rdbInversion = new javax.swing.JRadioButton();
        rdbVaciar = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblCartelera.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblCartelera.setText("Cartelera de Cine");

        jLabel1.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        jLabel1.setText("Seleccione una opción:");

        btnAceptar.setText("Aceptar");
        btnAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptarActionPerformed(evt);
            }
        });

        btnSalir.setText("Terminar");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        rdbInsertar.setText("Insertar Película");

        rdbExtraer.setText("Extraer Película");

        rdbObtenerInformacion.setText("Obtener Información de Película");

        rdbNumeroPeliculas.setText("Número de Películas Registradas");

        rdbMostrarLista.setText("Mostrar Lista de Películas");

        rdbInversion.setText("Inversión Total");

        rdbVaciar.setText("Vaciar Listado de Películas");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(114, 114, 114)
                .addComponent(btnAceptar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSalir)
                .addGap(133, 133, 133))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rdbObtenerInformacion)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(rdbInsertar)
                                    .addComponent(rdbExtraer))
                                .addGap(161, 161, 161)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(rdbInversion)
                                    .addComponent(rdbMostrarLista)
                                    .addComponent(rdbVaciar)))
                            .addComponent(rdbNumeroPeliculas)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(170, 170, 170)
                        .addComponent(lblCartelera)))
                .addContainerGap(58, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(lblCartelera, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rdbInsertar)
                    .addComponent(rdbMostrarLista))
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rdbExtraer)
                    .addComponent(rdbInversion))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rdbObtenerInformacion)
                    .addComponent(rdbVaciar))
                .addGap(18, 18, 18)
                .addComponent(rdbNumeroPeliculas)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAceptar)
                    .addComponent(btnSalir))
                .addGap(28, 28, 28))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //Maneja la funcionalidad del botón "Terminar"
    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        System.exit(0);
    }//GEN-LAST:event_btnSalirActionPerformed

    //Maneja la funcionalidad del botón "Aceptar"
    private void btnAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAceptarActionPerformed

        //Condicional para cuando no se selecciona ninguna opción
        if (!this.rdbExtraer.isSelected() && !this.rdbInsertar.isSelected() && !this.rdbInversion.isSelected() && !this.rdbMostrarLista.isSelected() && !this.rdbNumeroPeliculas.isSelected() && !this.rdbObtenerInformacion.isSelected() && !this.rdbVaciar.isSelected()) {
            JOptionPane.showMessageDialog(this,
                    "Es necesario seleccionar una opción para continuar",
                    "Alto",
                    JOptionPane.WARNING_MESSAGE);

            //Condicional para cuando se selecciona la opcion de Insertar Película
        } else if (this.rdbExtraer.isSelected()) {

            /* Crea el objeto ventana para mostrar el JDialog respectivo, y se indica "this" para hacer referencia al padre 
            y "true" para indicar que es modal en otras palabras que no permite hacer nada más hasta que se cierre la ventana.*/
            ExtraerPelicula ventana = new ExtraerPelicula(this, true);

            //Hace visible el objeto ventana
            ventana.setVisible(true);

            //Condicional para cuando se selecciona la opcion de Extraer Película
        } else if (this.rdbInsertar.isSelected()) {

            /* Crea el objeto ventana para mostrar el JDialog respectivo, y se indica "this" para hacer referencia al padre 
            y "true" para indicar que es modal en otras palabras que no permite hacer nada más hasta que se cierre la ventana.*/
            InsertarPelicula ventana = new InsertarPelicula(this, true);

            //Hace visible el objeto ventana
            ventana.setVisible(true);

            //Condicional para cuando se selecciona la opcion de Obtener Información de Película
        } else if (this.rdbInversion.isSelected()) {

            //Definición de variable local
            int valor = 0;

            //Ciclo para obtener el valor de la inversión total del cine
            for (int i = 0; i < listaPeliculas.longitud(); i++) {
                valor = valor + listaPeliculas.obtener(i).getValor();
            }

            JOptionPane.showMessageDialog(this,
                    "La inversión total del cine en exposición de las películas registradas es de: " + valor,
                    "Atención",
                    JOptionPane.INFORMATION_MESSAGE);

            //Condicional para cuando se selecciona la opcion de Número de Películas Registradas            
        } else if (this.rdbMostrarLista.isSelected()) {

            /* Crea el objeto ventana para mostrar el JDialog respectivo, y se indica "this" para hacer referencia al padre 
            y "true" para indicar que es modal en otras palabras que no permite hacer nada más hasta que se cierre la ventana.*/
            MostrarListaPeliculas ventana = new MostrarListaPeliculas(this, true);

            //Hace visible el objeto ventana
            ventana.setVisible(true);

            //Condicional para cuando se selecciona la opcion de Mostrar Lista de Películas
        } else if (this.rdbNumeroPeliculas.isSelected()) {

            /*Define variable local y llama a la variable estática de métodos globales para aplicar el método logitud y determinar
            el tamaño de la lista de películas que correspondería a la cantidad de películas*/
            int cantidadPeiculas = listaPeliculas.longitud();

            JOptionPane.showMessageDialog(this,
                    "El número de películas registradas es de: " + cantidadPeiculas,
                    "Atención",
                    JOptionPane.INFORMATION_MESSAGE);

            //Condicional para cuando se selecciona la opcion de Mostrar Inversión Total
        } else if (this.rdbObtenerInformacion.isSelected()) {

            /* Crea el objeto ventana para mostrar el JDialog respectivo, y se indica "this" para hacer referencia al padre 
            y "true" para indicar que es modal en otras palabras que no permite hacer nada más hasta que se cierre la ventana.*/
            MostrarInfoPelicula ventana = new MostrarInfoPelicula(this, true);

            //Hace visible el objeto ventana
            ventana.setVisible(true);

            //Condicional para cuando se selecciona la opcion de Vaciar Lista
        } else if (this.rdbVaciar.isSelected()) {

            //Método de la lista enlazada para cortar la lista, utilizado aquí para cortar la lista en el índice cero y que quede vacía
            listaPeliculas.limpiar();

            JOptionPane.showMessageDialog(this,
                    "La lista de películas fue vaciada con éxito",
                    "Atención",
                    JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnAceptarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Menu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup btgOpciones;
    private javax.swing.JButton btnAceptar;
    private javax.swing.JButton btnSalir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblCartelera;
    private javax.swing.JRadioButton rdbExtraer;
    private javax.swing.JRadioButton rdbInsertar;
    private javax.swing.JRadioButton rdbInversion;
    private javax.swing.JRadioButton rdbMostrarLista;
    private javax.swing.JRadioButton rdbNumeroPeliculas;
    private javax.swing.JRadioButton rdbObtenerInformacion;
    private javax.swing.JRadioButton rdbVaciar;
    // End of variables declaration//GEN-END:variables
}
